{"version":3,"sources":["assets\\Script\\Manager\\ObjectManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;IAAA;QAGY,aAAQ,GAAQ,EAAE,CAAC;IAsE/B,CAAC;IApEiB,yBAAW,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEa,6BAAe,GAA7B;QACI,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;IACL,CAAC;IAEO,6BAAK,GAAb;IAEA,CAAC;IAEO,gCAAQ,GAAhB;IAEA,CAAC;IAEY,6CAAqB,GAAlC,UAAmC,IAAY,EAAE,QAAqB;QAArB,yBAAA,EAAA,aAAqB;uCAAG,OAAO;;;gBAC5E,sBAAO,IAAI,OAAO,CAAY,UAAC,OAAO,EAAE,MAAM;wBAC1C,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BAErB,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC7B,OAAO;yBACV;wBACD,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;wBACvD,IAAI,CAAC,MAAM,EAAE;4BACT,OAAO,CAAC,IAAI,CAAC,CAAC;4BACd,OAAO;yBACV;wBACD,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,MAAM;4BACrC,IAAI,GAAG,EAAE;gCACL,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;gCACjC,OAAO,CAAC,IAAI,CAAC,CAAC;gCACd,OAAO;6BACV;4BACD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;4BAC7B,MAAM,CAAC,MAAM,EAAE,CAAA;4BACf,OAAO,CAAC,MAAmB,CAAC,CAAC;wBACjC,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,EAAC;;;KACN;IAEY,uCAAe,GAA5B,UAA6B,IAAY,EAAE,QAAqB;QAArB,yBAAA,EAAA,aAAqB;uCAAG,OAAO;;;gBACtE,sBAAO,IAAI,OAAO,CAAY,UAAC,OAAO,EAAE,MAAM;wBAC1C,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BAErB,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC7B,OAAO;yBACV;wBACD,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,MAAM;4BAC3C,IAAI,GAAG,EAAE;gCACL,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;gCACjC,OAAO,CAAC,IAAI,CAAC,CAAC;gCACd,OAAO;6BACV;4BACD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;4BAC7B,MAAM,CAAC,MAAM,EAAE,CAAA;4BACf,OAAO,CAAC,MAAmB,CAAC,CAAC;wBACjC,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,EAAC;;;KACN;IAtEc,uBAAS,GAAkB,IAAI,CAAC;IAuEnD,oBAAC;CAzED,AAyEC,IAAA;kBAzEoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["\n\nexport default class ObjectManager {\n\n    private static _instance: ObjectManager = null;\n    private _prefabs: any = {};\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new ObjectManager();\n            this._instance._init();\n        }\n        return this._instance;\n    }\n\n    public static destroyInstance() {\n        if (this._instance) {\n            this._instance._destroy();\n            delete this._instance;\n            this._instance = null;\n        }\n    }\n\n    private _init() {\n\n    }\n\n    private _destroy() {\n\n    }\n\n    public async getBundleObjectPrefab(path: string, superior: string = \"\"): Promise<cc.Prefab> {\n        return new Promise<cc.Prefab>((resolve, reject) => {\n            if (this._prefabs[path]) {\n\n                resolve(this._prefabs[path]);\n                return;\n            }\n            let bundle = cc.assetManager.getBundle(\"PlayerEffect\");\n            if (!bundle) {\n                resolve(null);\n                return;\n            }\n            bundle.load(path, cc.Prefab, (err, prefab) => {\n                if (err) {\n                    cc.log(\"getObjectNode err\", err);\n                    resolve(null);\n                    return;\n                }\n                this._prefabs[path] = prefab;\n                prefab.addRef()\n                resolve(prefab as cc.Prefab);\n            });\n        });\n    }\n\n    public async getObjectPrefab(path: string, superior: string = \"\"): Promise<cc.Prefab> {\n        return new Promise<cc.Prefab>((resolve, reject) => {\n            if (this._prefabs[path]) {\n\n                resolve(this._prefabs[path]);\n                return;\n            }\n            cc.resources.load(path, cc.Prefab, (err, prefab) => {\n                if (err) {\n                    cc.log(\"getObjectNode err\", err);\n                    resolve(null);\n                    return;\n                }\n                this._prefabs[path] = prefab;\n                prefab.addRef()\n                resolve(prefab as cc.Prefab);\n            });\n        });\n    }\n}\n"]}