{"version":3,"sources":["assets\\Script\\GameUtils\\GameUtils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport AutoReleaseSpineModify from '../Common/AutoReleaseSpineModify';\nimport SpineManager from '../Manager/SpineManager';\nimport LZString = require('./lzstring')\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GameUtils {\n\n    private static _instance: GameUtils = null;\n    public static getInstance(): GameUtils {\n        if (!this._instance) {\n            this._instance = new GameUtils();\n        }\n        return this._instance;\n    }\n\n    public setVisible(node: cc.Node | any, visible: boolean) {\n        if (node) {\n            if (node.node) {\n                node.node.active = visible;\n            } else {\n                node.active = visible;\n            }\n        }\n    }\n\n    public setCCCNodeOpacity(node: cc.Node, value: number) {\n        if (node) {\n            node.opacity = value;\n        }\n    }\n\n    public isVisible(node: cc.Node | any) {\n        if (node) {\n            if (node.node) {\n                return node.node.active\n            } else {\n                return node.active;\n            }\n            return false;\n        }\n    }\n\n    public setPosition(node: cc.Node | any, pos: cc.Vec2) {\n        if (node && pos) {\n            if (node.node) {\n                node.node.setPosition(pos);\n            } else {\n                node.setPosition(pos);\n            }\n        }\n    }\n\n    public setRotation(node: cc.Node, rotation: number = 0) {\n        if (node) {\n            node.rotation = rotation;\n        }\n    }\n\n    public setAngle(node: cc.Node, angle: number = 0) {\n        if (node) {\n            node.angle = angle;\n        }\n    }\n\n    public setScaleX(node: cc.Node | any, scaleX: number) {\n        if (node && scaleX) {\n            if (node.node) {\n                node.node.scaleX = scaleX;\n            } else {\n                node.scaleX = scaleX;\n            }\n        }\n    }\n\n    public setColor(node: cc.Node | any, color: cc.Color) {\n        if (node && color) {\n            if (node.node) {\n                node.node.color = color\n            } else {\n                node.scaleX = color;\n            }\n        }\n    }\n\n    public getPosition(node: cc.Node) {\n        if (node) {\n            return node.getPosition();\n        }\n        return cc.v2(0, 0);\n    }\n\n    public setProgress(node: cc.ProgressBar | cc.Slider, progress: number) {\n        //原来条件是：node && node.progress ，node.progress为0，则为false\n        if (node) {\n            node.progress = progress;\n        }\n    }\n\n    public setString(label: cc.Label | cc.RichText | cc.EditBox, text: string | number) {\n        // cc.log(new Error().stack);\n        // cc.log(text);\n\n        if (label) {\n            label.string = text + \"\" || \"\";\n        }\n    }\n\n    public getString(label: cc.Label | cc.RichText | cc.EditBox): string {\n        if (label) {\n            return label.string\n        }\n        return \"\";\n    }\n\n    //判断非法字符\n    public isHaveSpecial(text: string): boolean {\n        let reg = /^(\\w|[\\u4E00-\\u9FA5])*$/;\n        // let reg = /^([a-zA-Z0-9]|[\\u4E00-\\u9FA5])*$/;\n        if (text.match(reg)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    public setCCCNodeColor(cccNode: cc.Node, color: cc.Color | string, isChild: boolean = true) {\n        if (!cccNode) {\n            return;\n        }\n\n        this._setColor(cccNode, color);\n        if (isChild) {\n            let children = cccNode.children;\n            if (!children || children.length <= 0)\n                return;\n            for (let i = 0; i < children.length; i++) {\n                this.setCCCNodeColor(children[i], color, isChild);\n            }\n        }\n    }\n\n    private _setColor(cccNode: cc.Node, color: cc.Color | string) {\n        if (cccNode) {\n            if (typeof color == \"string\") {\n                cccNode.color = this.getColorRGBA(color);\n            }\n            else {\n                cccNode.color = color;\n            }\n        }\n    }\n\n    public getColorRGBA(colorString: string): cc.Color {\n        let colorValueList = [];\n        if (!colorString) { //默认为白色\n            colorString = \"#ffffff\";\n        }\n        if (colorString[0] != '#') {\n            colorString = '#' + colorString;\n        }\n        if (colorString.length < 9) {\n            colorString += \"ff\";\n        }\n        for (let i = 1; i < 9; i += 2) {\n            colorValueList.push(parseInt(\"0x\" + colorString.slice(i, i + 2)));\n        }\n        let color = cc.color(colorValueList[0], colorValueList[1], colorValueList[2], colorValueList[3]);\n        return color;\n    }\n\n    public setCCCNodeGray(node: cc.Node | cc.Component, isGray: boolean, isChild: boolean = true) {\n        if (!node) {\n            return;\n        }\n\n        let cccNode: cc.Node = null;\n        if (node instanceof cc.Component) {\n            cccNode = node.node;\n        } else {\n            cccNode = node;\n        }\n        if (!cccNode) {\n            return;\n        }\n\n        let spr: cc.Sprite = cccNode.getComponent(cc.Sprite);\n        if (spr) {\n            this.setCCCSpriteGray(spr, isGray, false);\n        }\n        let label: cc.Label = cccNode.getComponent(cc.Label);\n        if (label) {\n            this.setCCCLabelGray(label, isGray, false);\n        }\n        let button: cc.Button = cccNode.getComponent(cc.Button);\n        if (button) {\n            this.setButtonGray(button, isGray, false);\n        }\n\n        if (isChild) {\n            let children = cccNode.children;\n            if (!children || children.length <= 0)\n                return;\n            for (let i = 0; i < children.length; i++) {\n                this.setCCCNodeGray(children[i], isGray, isChild);\n            }\n        }\n    }\n\n    public setCCCSpriteGray(sprite: cc.Sprite, isGray: boolean, isChild: boolean = true) {\n        if (!sprite) {\n            return;\n        }\n        // sprite.setState(isGray ? 1 : 0);//升级到2.1.2后 废弃了\n        //以下为2.1.2版本\n        let mat: cc.Material = null;\n        if (isGray) {\n            mat = cc.Material.getBuiltinMaterial('2d-gray-sprite');\n        }\n        else {\n            mat = cc.Material.getBuiltinMaterial('2d-sprite');\n        }\n        sprite.setMaterial(0, mat);\n        //---\n        if (isChild) {\n            let children = sprite.node.children;\n            if (!children || children.length <= 0)\n                return;\n            for (let i = 0; i < children.length; i++) {\n                this.setCCCSpriteGray(children[i].getComponent(cc.Sprite), isGray, isChild);\n            }\n        }\n    }\n\n    public setCCCLabelGray(label: cc.Label, isGray: boolean, isChild: boolean = true) {\n        if (!label) {\n            return;\n        }\n        // sprite.setState(isGray ? 1 : 0);//升级到2.1.2后 废弃了\n        //以下为2.1.2版本\n        let mat: cc.Material = null;\n        if (isGray) {\n            mat = cc.Material.getBuiltinMaterial('2d-gray-sprite');\n        }\n        else {\n            mat = cc.Material.getBuiltinMaterial('2d-sprite');\n        }\n        label.setMaterial(0, mat);\n        //---\n        if (isChild) {\n            let children = label.node.children;\n            if (!children || children.length <= 0)\n                return;\n            for (let i = 0; i < children.length; i++) {\n                this.setCCCLabelGray(children[i].getComponent(cc.Label), isGray, isChild);\n            }\n        }\n    }\n\n    public setButtonGray(button: cc.Button, isGray: boolean = true, isChild: boolean = true) {\n        if (button) {\n            button.interactable = !isGray;\n            button.enableAutoGrayEffect = true;\n\n            if (isChild) {\n                let children = button.node.children;\n                for (let i = 0; i < children.length; i++) {\n                    let child = children[i];\n                    this.setCCCNodeGray(child, isGray, isChild);\n                }\n            }\n        }\n    }\n\n    /**\n     * 判断该日期是否到期 time 时间戳(毫秒)\n     */\n    public checkTimeISOverDue(time: number) {\n        let date = new Date()\n        let nowTime = date.getTime()\n        return nowTime - time >= 0\n    }\n\n    public isNull(obj: any): boolean {\n        return obj === null || obj === undefined;\n    }\n\n    public replaceString(text: string, args: any[] = []) {\n        if (!text) {\n            return \"\";\n        }\n        let result = text;\n        if (!this.isNull(args) && args.length > 0) {\n            for (let i = 0; i < args.length; i++) {\n                let re = new RegExp('\\\\{' + (i) + '\\\\}', 'gm');\n                result = result.replace(re, args[i]);\n            }\n        }\n        return result;\n    }\n\n    public getChildByName(node: cc.Node, name: string, component: { prototype: cc.Component } | string = null) {\n        let temp = null;\n        if (node) {\n            temp = node.getChildByName(name);\n            if (!temp) {\n                let children = node.children;\n                for (let i = 0; i < children.length; ++i) {\n                    temp = this.getChildByName(children[i], name);\n                    if (temp) {\n                        if (component) {\n                            return temp.getComponent(component);\n                        }\n                        return temp;\n                    }\n                }\n            }\n        }\n        return temp;\n    }\n\n    public getCompressString(str: string): string {\n        if (!str) {\n            return \"\";\n        }\n        return LZString.compressToBase64(str);\n    }\n\n    public getDecompressString(compressString: string): string {\n        if (!compressString) {\n            return \"\";\n        }\n        return LZString.decompressFromBase64(compressString);\n    }\n\n    //读取英雄动画换皮\n    async loadGeneralAnimation(spine: sp.Skeleton, spineModifyList = null) {\n        if (spineModifyList && spineModifyList.length > 0) {\n            for (let i = 0; i < spineModifyList.length; i++) {\n                const smd = spineModifyList[i];\n                this.modifySpineAttachment(spine, smd.slotName, smd.sfPath)\n            }\n        }\n    }\n\n    public modifySpineAttachment(spo: sp.Skeleton, slotName: string, sfPath: string) {\n        if (!spo || !slotName || !sfPath) {\n            cc.error(\"modifySpineAttachment args err\");\n            return;\n        }\n        cc.resources.load(sfPath, cc.SpriteFrame, (err: Error | null, sf: cc.SpriteFrame) => {\n            if (!err !== null && err !== undefined) {\n                console.error(`loadSpineSF ${sfPath} error:`, err);\n                return;\n            }\n            spo.changeSlotSkin(slotName, sf);\n\n            let autoCom: AutoReleaseSpineModify = spo.getComponent(AutoReleaseSpineModify);\n            if (spo && !autoCom) {\n                autoCom = spo.addComponent(AutoReleaseSpineModify);\n            }\n            autoCom.addModifySF(sf);\n        });\n    }\n\n    /**\n    * 局部换皮肤，可以更换皮肤指定的部位。非常nice！\n    * @param spine 要替换的spine动画\n    * @param skinName 要替换的部件皮肤名称\n    * @param slotName 要替换的部件的插槽名称\n    * @param targetAttaName  Spine中皮肤占位符的名字\n     */\n    changeSlot(spine: sp.Skeleton, skinName: string, slotName: string, targetAttaName: string) {\n        //查找局部皮肤\n        let skeletonData = spine.skeletonData.getRuntimeData();\n        let targetSkin: sp.spine.Skin = skeletonData.findSkin(skinName);\n\n        if (!targetSkin) {\n            cc.warn(\"找不到这个皮肤:\", skinName)\n            return\n        }\n\n        //查找局部皮肤下的插槽与附件\n        let targetSkinSlotIndex = skeletonData.findSlotIndex(slotName);\n        let atta = targetSkin.getAttachment(targetSkinSlotIndex, targetAttaName);\n\n        //查找全身皮肤下的插槽\n        let curSlot = spine.findSlot(slotName);\n\n        //替换全身皮肤插槽的附件\n        curSlot && curSlot.setAttachment(atta);\n    }\n}\n"]}